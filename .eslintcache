[{"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\index.js":"1","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\App.js":"2","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\reportWebVitals.js":"3","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\components\\Router\\Router.jsx":"4","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\components\\notFound\\NotFound.jsx":"5","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\Login\\Login.jsx":"6","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\components\\BaseLayout\\BaseLayout.jsx":"7","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\config\\axios\\axios.jsx":"8","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\redux\\reducers\\index.jsx":"9","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\redux\\reducers\\hobbys.jsx":"10","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\users\\users.jsx":"11","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\users\\Users.jsx":"12","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\blog\\Blog.jsx":"13","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\config\\jwt\\jwt.jsx":"14"},{"size":657,"mtime":1612025914636,"results":"15","hashOfConfig":"16"},{"size":741,"mtime":1614135189349,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":473,"mtime":1610685447680,"results":"19","hashOfConfig":"16"},{"size":170,"mtime":1610686698861,"results":"20","hashOfConfig":"16"},{"size":7382,"mtime":1614330963007,"results":"21","hashOfConfig":"16"},{"size":2333,"mtime":1614333931490,"results":"22","hashOfConfig":"16"},{"size":323,"mtime":1612262908070,"results":"23","hashOfConfig":"16"},{"size":174,"mtime":1612024449282,"results":"24","hashOfConfig":"16"},{"size":287,"mtime":1612026056148,"results":"25","hashOfConfig":"16"},{"size":489,"mtime":1612272180888,"results":"26","hashOfConfig":"16"},{"size":5580,"mtime":1614302514423,"results":"27","hashOfConfig":"16"},{"size":160,"mtime":1614135031815,"results":"28","hashOfConfig":"16"},{"size":198,"mtime":1614134767795,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1ctpv72",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\index.js",[],["65","66"],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\App.js",[],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\reportWebVitals.js",[],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\components\\Router\\Router.jsx",["67"],"import React from \"react\";\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n      <Route {...rest} render={props => (\r\n        <Component {...props} />\r\n      )} />\r\n    )\r\n};\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n    return(\r\n      <Route {...rest} render={props => (\r\n        <Component {...props} />\r\n      )} />  \r\n    )                      \r\n};",["68","69"],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\components\\notFound\\NotFound.jsx",[],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\Login\\Login.jsx",[],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\components\\BaseLayout\\BaseLayout.jsx",["70"],"import React, { useState } from 'react';\r\nimport { Layout, Menu, Drawer, Row, Col } from 'antd';\r\nimport { MenuOutlined, LogoutOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport \"../BaseLayout/BaseLayout.css\"\r\nimport logoHeader from \"../../vendor/img/nodejsLogo.png\"\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport Cookies from \"js-cookie\"\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nfunction BaseLayout(props) {\r\n  let history = useHistory()\r\n  let [visibleDrawer, setVisibleDrawer] = useState(false)\r\n  const showDrawer = () => {\r\n    setVisibleDrawer(true)\r\n  };\r\n  const onClose = () => {\r\n    setVisibleDrawer(false)\r\n  }\r\n  const drawer = (\r\n    <Drawer\r\n      title=\"NODEJS\"\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={visibleDrawer}\r\n    >\r\n      <p>Some contents...</p>\r\n      <p>Some contents...</p>\r\n      <p>Some contents...</p>\r\n    </Drawer>\r\n  )\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <Header>\r\n        {drawer}\r\n        <span><img className=\"logo-header\" src={logoHeader} alt=\"\" /></span>\r\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']} className=\"baselayout-header\">\r\n          <Menu.Item key=\"1\"></Menu.Item>\r\n          <Menu.Item key=\"2\" onClick={showDrawer} className=\"baselayout-header-response\"><MenuOutlined /></Menu.Item>\r\n        </Menu>\r\n        <button className=\"baselayout-header-logout\" onClick={()=>{\r\n          axios({\r\n            method: \"POST\",\r\n            url: \"/user/logout\"\r\n          })\r\n          .then((res)=>{\r\n            console.log(res);\r\n            Cookies.remove(\"token\")\r\n            history.push(\"/login\")\r\n          })\r\n        }}>Đăng Xuất</button>\r\n      </Header>\r\n      <Content className=\"site-layout-background ant-layout-content\">\r\n        <Row justify=\"center content\">\r\n          <Col xs={props.xs ? props.xs : 23} sm={props.sm ? props.sm : 23}\r\n            style={{ padding: \"0 0\" }}>\r\n            <div className=\"site-layout-content\">\r\n              {\r\n                props.children\r\n              }\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default BaseLayout;","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\config\\axios\\axios.jsx",[],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\redux\\reducers\\index.jsx",[],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\redux\\reducers\\hobbys.jsx",[],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\users\\users.jsx",["71"],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\users\\Users.jsx",["72","73","74"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from \"../../config/axios/axios\";\r\nimport BaseLayout from \"../../components/BaseLayout/BaseLayout\"\r\nimport \"./Users.css\"\r\nimport { Table, Space, Avatar, Image, Popconfirm, message, Button, Modal} from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport checkJwt from \"../../config/jwt/jwt\"\r\nfunction Users(props) {\r\n    let [data, setData] = useState(\"\");\r\n    let [dataSearch, setDataSearch] = useState(\"\")\r\n    let [overview, setOverview] = useState(false)\r\n    let [visible, setVisible] = useState(false);\r\n    let [username, setUsername] = useState(\"\")\r\n    let [password, setPassword] = useState(\"\")\r\n    let [id, setId] = useState(\"\")\r\n    const texts = 'Are you sure to delete this user?';\r\n    useEffect(() => {\r\n        axios({\r\n            method: \"GET\",\r\n            url: \"/user\"\r\n        })\r\n            .then((result) => {\r\n                let dataChange = result.data.data.map((item, index) => {\r\n                    let source = {\r\n                        avatar: <Avatar src={<Image src=\"https://thuthuatnhanh.com/wp-content/uploads/2018/07/anh-dai-dien-dep.jpg\"></Image>}></Avatar>,\r\n                        key: index\r\n                    }\r\n\r\n                    return Object.assign(item, source)\r\n                })\r\n                setData(dataChange)\r\n            })\r\n            .catch((err) => {\r\n                alert(err.response.data.message);\r\n            })\r\n    }, [overview])\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Avatar',\r\n            dataIndex: 'avatar',\r\n            key: 'avatar',\r\n        },\r\n        {\r\n            title: 'Username',\r\n            dataIndex: 'username',\r\n            key: 'username',\r\n            render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phone',\r\n            key: 'phone',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            key: 'action',\r\n            render: (dataIndex, record) => (\r\n                <Space size=\"middle\">\r\n                    <Button onClick={() => {\r\n                        setId(dataIndex)\r\n                        setVisible(true)\r\n                    }}>Edit</Button>    \r\n                    <Popconfirm placement=\"top\" title={texts} onConfirm={() => {\r\n                        axios({\r\n                            method: \"DELETE\",\r\n                            url: `/user/${dataIndex}`\r\n                        })\r\n                            .then((res) => {\r\n                                setOverview(!overview)\r\n                                message.info('Delete success');\r\n                            })\r\n\r\n                    }} okText=\"Yes\" cancelText=\"No\">\r\n                        <Button>Delete</Button>\r\n                    </Popconfirm>\r\n                </Space>\r\n            ),\r\n        },\r\n    ]\r\n    const modalUser = (\r\n        <Modal\r\n            title=\"Edit user\"\r\n            visible={visible}\r\n            onOk={() => {\r\n                axios({\r\n                    method: \"PUT\",\r\n                    url: `/user/${id}`,\r\n                    data: {\r\n                        username: username,\r\n                        password: password\r\n                    }\r\n                })\r\n                    .then((res) => {\r\n                        setOverview(!overview)\r\n                        setVisible(false)\r\n                    })\r\n                    .catch((err)=>{\r\n                        alert(err.response.data.message)\r\n                    })\r\n            }}\r\n            onCancel={() => {\r\n                setVisible(false)\r\n            }}\r\n        >\r\n            <p>Username</p>\r\n            <input style={{ border: \"1px solid black\", width: \"90%\", height: \"30px\", outline: \"none\", padding: \"0px 15px\" }} type=\"text\" placeholder=\"Nhập username\"\r\n                onChange={(e) => {\r\n                    setUsername(e.target.value)\r\n                }}\r\n            />\r\n            <p style={{ marginTop: \"15px\" }}>Password</p>\r\n            <input style={{ border: \"1px solid black\", width: \"90%\", height: \"30px\", outline: \"none\", padding: \"0px 15px\" }} type=\"text\" placeholder=\"Nhập password\"\r\n                onChange={(e) => {\r\n                    setPassword(e.target.value)\r\n                }}\r\n            />\r\n        </Modal>\r\n    )\r\n    return (\r\n        <BaseLayout>\r\n            {modalUser}\r\n            <div className=\"user-findUser\">\r\n                <input type=\"text\" placeholder=\"Search user you want\" onChange={(e) => {\r\n                    setDataSearch(e.target.value)\r\n                }} />\r\n                <button onClick={() => {\r\n                    if (data) {\r\n                        if (dataSearch) {\r\n                            let dataFiter = data.filter((item) => {\r\n                                return item.username === dataSearch || item.email === dataSearch\r\n                            });\r\n                            setData(dataFiter)\r\n                        }\r\n                    }\r\n                }\r\n                }><SearchOutlined></SearchOutlined></button>\r\n            </div>\r\n            <div className=\"users\">\r\n                <Table\r\n                    columns={columns}\r\n                    pagination={{total: \"10\", current: 1}}\r\n                    dataSource={data}\r\n                />\r\n            </div>\r\n        </BaseLayout>\r\n    );\r\n}\r\n\r\nexport default Users;","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\blog\\Blog.jsx",[],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\config\\jwt\\jwt.jsx",["75"],"import axios from \"../axios/axios\"\r\nfunction checkJwt(params) {\r\n    axios({\r\n        method: \"POST\",\r\n        url: \"/user/checkJwt\"\r\n    })\r\n    .then((res)=>{\r\n        console.log(res);\r\n    })\r\n}",["76","77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":2,"column":17,"nodeType":"84","messageId":"85","endLine":2,"endColumn":25},{"ruleId":"78","replacedBy":"86"},{"ruleId":"80","replacedBy":"87"},{"ruleId":"82","severity":1,"message":"88","line":3,"column":24,"nodeType":"84","messageId":"85","endLine":3,"endColumn":38},{"ruleId":"89","severity":2,"message":"90","line":7,"column":5,"nodeType":"84","endLine":7,"endColumn":14},{"ruleId":"82","severity":1,"message":"91","line":1,"column":38,"nodeType":"84","messageId":"85","endLine":1,"endColumn":44},{"ruleId":"82","severity":1,"message":"92","line":7,"column":8,"nodeType":"84","messageId":"85","endLine":7,"endColumn":16},{"ruleId":"93","severity":1,"message":"94","line":49,"column":29,"nodeType":"95","endLine":49,"endColumn":32},{"ruleId":"82","severity":1,"message":"92","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":18},{"ruleId":"78","replacedBy":"96"},{"ruleId":"80","replacedBy":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar",["98"],["99"],"'LogoutOutlined' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useEffect\" is called in function \"users\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'useRef' is defined but never used.","'checkJwt' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["98"],["99"],"no-global-assign","no-unsafe-negation"]