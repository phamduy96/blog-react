[{"C:\\Users\\84336\\Desktop\\blog-react\\src\\index.js":"1","C:\\Users\\84336\\Desktop\\blog-react\\src\\reportWebVitals.js":"2","C:\\Users\\84336\\Desktop\\blog-react\\src\\App.js":"3","C:\\Users\\84336\\Desktop\\blog-react\\src\\redux\\reducers\\index.jsx":"4","C:\\Users\\84336\\Desktop\\blog-react\\src\\redux\\reducers\\IDBlog.jsx":"5","C:\\Users\\84336\\Desktop\\blog-react\\src\\components\\notFound\\NotFound.jsx":"6","C:\\Users\\84336\\Desktop\\blog-react\\src\\views\\users\\Users.jsx":"7","C:\\Users\\84336\\Desktop\\blog-react\\src\\views\\users\\UpdatePhone.jsx":"8","C:\\Users\\84336\\Desktop\\blog-react\\src\\views\\users\\UpdateAvarta.jsx":"9","C:\\Users\\84336\\Desktop\\blog-react\\src\\views\\blog\\Blog.jsx":"10","C:\\Users\\84336\\Desktop\\blog-react\\src\\views\\updateBlog\\UpdateBlog.jsx":"11","C:\\Users\\84336\\Desktop\\blog-react\\src\\components\\Router\\index.jsx":"12","C:\\Users\\84336\\Desktop\\blog-react\\src\\views\\blog\\DetailBlog.jsx":"13","C:\\Users\\84336\\Desktop\\blog-react\\src\\views\\Login\\LoginAdmin.jsx":"14","C:\\Users\\84336\\Desktop\\blog-react\\src\\views\\Login\\Login.jsx":"15","C:\\Users\\84336\\Desktop\\blog-react\\src\\components\\BaseLayout\\BaseLayout.jsx":"16","C:\\Users\\84336\\Desktop\\blog-react\\src\\config\\axios\\axios.jsx":"17"},{"size":675,"mtime":1615006196398,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1615006196401,"results":"20","hashOfConfig":"19"},{"size":1718,"mtime":1615541607073,"results":"21","hashOfConfig":"19"},{"size":185,"mtime":1615190086977,"results":"22","hashOfConfig":"19"},{"size":330,"mtime":1615190086967,"results":"23","hashOfConfig":"19"},{"size":170,"mtime":1615006196395,"results":"24","hashOfConfig":"19"},{"size":5552,"mtime":1615347265400,"results":"25","hashOfConfig":"19"},{"size":2017,"mtime":1615190087040,"results":"26","hashOfConfig":"19"},{"size":1389,"mtime":1615544807180,"results":"27","hashOfConfig":"19"},{"size":6274,"mtime":1615450689558,"results":"28","hashOfConfig":"19"},{"size":1844,"mtime":1615006196413,"results":"29","hashOfConfig":"19"},{"size":1219,"mtime":1615541563205,"results":"30","hashOfConfig":"19"},{"size":10284,"mtime":1615536469101,"results":"31","hashOfConfig":"19"},{"size":1588,"mtime":1615536469093,"results":"32","hashOfConfig":"19"},{"size":8669,"mtime":1615536469067,"results":"33","hashOfConfig":"19"},{"size":4421,"mtime":1615450689532,"results":"34","hashOfConfig":"19"},{"size":323,"mtime":1615006196396,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"ersc31",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\84336\\Desktop\\blog-react\\src\\index.js",[],["76","77"],"C:\\Users\\84336\\Desktop\\blog-react\\src\\reportWebVitals.js",[],"C:\\Users\\84336\\Desktop\\blog-react\\src\\App.js",[],"C:\\Users\\84336\\Desktop\\blog-react\\src\\redux\\reducers\\index.jsx",[],"C:\\Users\\84336\\Desktop\\blog-react\\src\\redux\\reducers\\IDBlog.jsx",[],"C:\\Users\\84336\\Desktop\\blog-react\\src\\components\\notFound\\NotFound.jsx",[],"C:\\Users\\84336\\Desktop\\blog-react\\src\\views\\users\\Users.jsx",["78"],"import React, { useEffect, useState } from 'react';\r\nimport axios from \"../../config/axios/axios\";\r\nimport BaseLayout from \"../../components/BaseLayout/BaseLayout\"\r\nimport \"./Users.css\"\r\nimport { Table, Space, Avatar, Image, Popconfirm, message, Button, Modal} from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nfunction Users(props) {\r\n    let [data, setData] = useState(\"\");\r\n    let [dataSearch, setDataSearch] = useState(\"\")\r\n    let [overview, setOverview] = useState(false)\r\n    let [visible, setVisible] = useState(false);\r\n    let [username, setUsername] = useState(\"\")\r\n    let [password, setPassword] = useState(\"\")\r\n    let [id, setId] = useState(\"\")\r\n    const texts = 'Are you sure to delete this user?';\r\n    useEffect(() => {\r\n        axios({\r\n            method: \"GET\",\r\n            url: \"/user\"\r\n        })\r\n            .then((result) => {\r\n                let dataChange = result.data.data.map((item, index) => {\r\n                    let source = {\r\n                        avatar: item.avatar.length === 1 ? <Avatar>{item.avatar}</Avatar> :\r\n                            <Avatar src={<Image src={`${item.avatar}`}></Image>}></Avatar>,\r\n                        key: index\r\n                    }\r\n\r\n                    return Object.assign(item, source)\r\n                })\r\n                setData(dataChange)\r\n            })\r\n            .catch((err) => {\r\n                alert(err.response.data.message);\r\n            })\r\n    }, [overview])\r\n    const columns = [\r\n        {\r\n            title: 'Avatar',\r\n            dataIndex: 'avatar',\r\n            key: 'avatar',\r\n        },\r\n        {\r\n            title: 'Username',\r\n            dataIndex: 'username',\r\n            key: 'username',\r\n            render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phone',\r\n            key: 'phone',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            key: 'action',\r\n            render: (dataIndex, record) => (\r\n                <Space size=\"middle\">\r\n                    <Button onClick={() => {\r\n                        setId(dataIndex)\r\n                        setVisible(true)\r\n                    }}>Edit</Button>    \r\n                    <Popconfirm placement=\"top\" title={texts} onConfirm={() => {\r\n                        axios({\r\n                            method: \"DELETE\",\r\n                            url: `/user/${dataIndex}`\r\n                        })\r\n                            .then((res) => {\r\n                                setOverview(!overview)\r\n                                message.info('Delete success');\r\n                            })\r\n\r\n                    }} okText=\"Yes\" cancelText=\"No\">\r\n                        <Button>Delete</Button>\r\n                    </Popconfirm>\r\n                </Space>\r\n            ),\r\n        },\r\n    ]\r\n    const modalUser = (\r\n        <Modal\r\n            title=\"Edit user\"\r\n            visible={visible}\r\n            onOk={() => {\r\n                axios({\r\n                    method: \"PUT\",\r\n                    url: `/user/${id}`,\r\n                    data: {\r\n                        username: username,\r\n                        password: password\r\n                    }\r\n                })\r\n                    .then((res) => {\r\n                        setOverview(!overview)\r\n                        setVisible(false)\r\n                    })\r\n                    .catch((err)=>{\r\n                        alert(err.response.data.message)\r\n                    })\r\n            }}\r\n            onCancel={() => {\r\n                setVisible(false)\r\n            }}\r\n        >\r\n            <p>Username</p>\r\n            <input style={{ border: \"1px solid black\", width: \"90%\", height: \"30px\", outline: \"none\", padding: \"0px 15px\" }} type=\"text\" placeholder=\"Nhập username\"\r\n                onChange={(e) => {\r\n                    setUsername(e.target.value)\r\n                }}\r\n            />\r\n            <p style={{ marginTop: \"15px\" }}>Password</p>\r\n            <input style={{ border: \"1px solid black\", width: \"90%\", height: \"30px\", outline: \"none\", padding: \"0px 15px\" }} type=\"text\" placeholder=\"Nhập password\"\r\n                onChange={(e) => {\r\n                    setPassword(e.target.value)\r\n                }}\r\n            />\r\n        </Modal>\r\n    )\r\n    return (\r\n        <BaseLayout>\r\n            {modalUser}\r\n            <div className=\"user-findUser\">\r\n                <input type=\"text\" placeholder=\"Search user you want\" onChange={(e) => {\r\n                    setDataSearch(e.target.value)\r\n                }} />\r\n                <button onClick={() => {\r\n                    if (data) {\r\n                        if (dataSearch) {\r\n                            let dataFiter = data.filter((item) => {\r\n                                return item.username.includes(dataSearch) || item.email.includes(dataSearch)\r\n                            });\r\n                            setData(dataFiter)\r\n                        }\r\n                    }\r\n                }\r\n                }><SearchOutlined></SearchOutlined></button>\r\n            </div>\r\n            <div className=\"users\">\r\n                <Table\r\n                    className=\"users-table\"\r\n                    columns={columns}\r\n                    dataSource={data}\r\n                />\r\n            </div>\r\n        </BaseLayout>\r\n    );\r\n}\r\n\r\nexport default Users;","C:\\Users\\84336\\Desktop\\blog-react\\src\\views\\users\\UpdatePhone.jsx",[],"C:\\Users\\84336\\Desktop\\blog-react\\src\\views\\users\\UpdateAvarta.jsx",["79"],"C:\\Users\\84336\\Desktop\\blog-react\\src\\views\\blog\\Blog.jsx",[],"C:\\Users\\84336\\Desktop\\blog-react\\src\\views\\updateBlog\\UpdateBlog.jsx",[],"C:\\Users\\84336\\Desktop\\blog-react\\src\\components\\Router\\index.jsx",[],"C:\\Users\\84336\\Desktop\\blog-react\\src\\views\\blog\\DetailBlog.jsx",["80"],"import React, { useEffect, useState } from 'react';\r\nimport BaseLayout from \"../../components/BaseLayout/BaseLayout\";\r\nimport axios from \"../../config/axios/axios\"\r\nimport \"../blog/DetailBlog.css\"\r\nimport { Col, Row, Image, Input, BackTop, Affix, Avatar } from 'antd';\r\nimport {\r\n    createFromIconfontCN, LeftCircleOutlined, ArrowUpOutlined\r\n} from '@ant-design/icons';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction DetailBlog(props) {\r\n    let [dataBlog, setDataBlog] = useState(\"\")\r\n    let idBlog = window.location.href.split('http://localhost:3000/detailBlog/')[1];\r\n    let [contentComment, setContentComment] = useState(\"\")\r\n    let history = useHistory()\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n    let [comments, setComments] = useState(\"\")\r\n    let [overview, setOverview] = useState(false)\r\n    const IconFont = createFromIconfontCN({\r\n        scriptUrl: '//at.alicdn.com/t/font_8d5l8fzk5b87iudi.js',\r\n    });\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'GET',\r\n            url: `/detail-blog/${idBlog}`\r\n        }).then((data) => {\r\n            setDataBlog(data.data.data);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }, [overview])\r\n\r\n\r\n    function getTimeComment(timeCreateAt) {\r\n        let years = Math.floor((Date.now() - timeCreateAt) / (259200 * 3600000));\r\n        let months = Math.floor((Date.now() - timeCreateAt - years * (259200 * 3600000)) / (720 * 3600000));\r\n        let weeks = Math.floor((Date.now() - timeCreateAt - years * (259200 * 3600000) - months * (720 * 3600000)) / (168 * 3600000));\r\n        let days = Math.floor((Date.now() - timeCreateAt - years * (259200 * 3600000) - months * (720 * 3600000) - weeks * (168 * 3600000)) / (24 * 3600000));\r\n        let hours = Math.floor((Date.now() - timeCreateAt - years * (259200 * 3600000) - months * (720 * 3600000) - weeks * (168 * 3600000) - days * (24 * 3600000)) / (3600000));\r\n        let minutes = Math.floor((Date.now() - timeCreateAt - years * (259200 * 3600000) - months * (720 * 3600000) - weeks * (168 * 3600000) - days * (24 * 3600000) - hours * 3600000) / (60000));\r\n        let seconds = Math.floor((Date.now() - timeCreateAt - years * (259200 * 3600000) - months * (720 * 3600000) - weeks * (168 * 3600000) - days * (24 * 3600000) - hours * 3600000 - minutes * 60000) / (1000));\r\n        return { years, months, days, weeks, hours, minutes, seconds }\r\n    }\r\n    useEffect(() => {\r\n        if (dataBlog) {\r\n            axios({\r\n                method: \"GET\",\r\n                url: `/blog/getComment/${dataBlog._id}`\r\n            })\r\n                .then((res) => {\r\n                    setComments(res.data.data[0].idComment)\r\n                })\r\n                .catch((err) => {\r\n                    console.dir(err)\r\n                })\r\n        }\r\n    }, [dataBlog])\r\n\r\n    if(comments){\r\n        comments = comments.filter((item)=>{\r\n            return item.idUser\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <BaseLayout>\r\n            <div style={{ paddingBottom: \"20px\" }}>\r\n                <Row>\r\n                    <Col >\r\n                        <Affix offsetTop={280} onChange={affixed => console.log(affixed)}>\r\n                            <div className=\"icon-fix\">\r\n                                <div>  <LeftCircleOutlined onClick={() => {\r\n                                    history.push(\"/blog\")\r\n                                }} />  </div>\r\n                                <div> <IconFont type=\"icon-facebook\" /> </div>\r\n                                <div> <IconFont type=\"icon-twitter\" /> </div>\r\n                            </div>\r\n\r\n                        </Affix >\r\n                        {<div style={{ background: \"#fcfaf6\" }}>\r\n                            <div className=\"container\" style={{ padding: \"0 25px\", marginBottom: \"40px\" }}>\r\n                                <h1 style={{ paddingBottom: \"20px\", marginBottom: \"30px\", fontSize: \"25px\" }}> {dataBlog.title}  </h1>\r\n                                <div style={{ textAlign: \"center\", paddingBottom: \"20px\" }}>\r\n                                    <Image style={{ width: \"500px\", height: '300px' }}\r\n                                        src={dataBlog.image}\r\n                                    >\r\n                                    </Image>\r\n                                    <p style={{ textAlign: \"center\", marginTop: \"15px\" }}>{dataBlog.introduceImg}</p>\r\n\r\n                                </div>\r\n                                <h3> {dataBlog.content}   </h3>\r\n                            </div>\r\n                        </div>\r\n                        }\r\n                        < hr style={{ height: \"3px\" }} />\r\n                        <div style={{ paddingBottom: \"30px\" }}>\r\n                            <div className=\"container\">\r\n                                <h3 style={{ fontSize: \"20px\", paddingBottom: \"20px\" }}> {comments.length} Comments </h3>\r\n                                <div className=\"comment-detailblog\">\r\n                                    {user.avatar ? user.avatar.length === 1 ? <Avatar>{user.avatar.toUpperCase()}</Avatar> : <Avatar src={user.avatar}></Avatar> : null}\r\n                                    <Input placeholder=\"Y kien cua ban... \" type=\"text\" onChange={(e) => {\r\n                                        setContentComment(e.target.value)\r\n                                    }} />\r\n                                </div>\r\n                                <button type=\"button\" style={{ marginTop: \"10px\", marginBottom: \"20px\", padding: \"3px\", cursor: \"pointer\" }} onClick={() => {\r\n                                    axios({\r\n                                        method: \"POST\",\r\n                                        url: \"/comment\",\r\n                                        data: {\r\n                                            idBlog: dataBlog._id,\r\n                                            idUser: user._id,\r\n                                            content: contentComment,\r\n                                            createAt: Date.now() - 1000\r\n                                        }\r\n                                    })\r\n                                        .then((res) => {\r\n                                            setOverview(!overview)\r\n                                        })\r\n                                        .catch((err) => {\r\n                                            alert(err.response.data.message)\r\n                                        })\r\n                                }}> gui binh luan </button>\r\n                                <div>\r\n\r\n                                    {comments.length ? comments.map((item, index) => {\r\n                                        let timeAgo = getTimeComment(item.createAt)\r\n                                        return <Row style={{ marginTop: \"10px\" }} key={index}>\r\n                                            <Col span={1}>\r\n                                                <div className=\"avatar\">\r\n                                                    {item.idUser ? item.idUser.avatar.length === 1 ? <Avatar style={{ color: \"rgb(230, 70, 78)\" }}>{item.idUser.avatar.toUpperCase()}</Avatar> : <Avatar src={`${item.idUser.avatar}`}></Avatar> : null}\r\n                                                </div>\r\n                                            </Col>\r\n                                            <Col span={23} style={{ paddingLeft: \"10px\" }}>\r\n                                                <span style={{ color: \"#9670d4\", fontWeight: \"600\", paddingRight: \"10px\", fontSize: \"18px\" }}> {item.idUser ? item.idUser.username : null} </span>\r\n                                                <span style={{ fontSize: \"14px\", color: \"#424447\" }}>{timeAgo.years ? timeAgo.years : null}\r\n                                                    {timeAgo.years ? <span style={{ marginRight: \"7px\", marginLeft: \"5px\" }}>years</span> : null}\r\n                                                    {timeAgo.months ? timeAgo.months : null}\r\n                                                    {timeAgo.months ? <span style={{ marginRight: \"7px\", marginLeft: \"5px\" }}>months</span> : null}\r\n                                                    {timeAgo.weeks ? timeAgo.weeks : null}\r\n                                                    {timeAgo.weeks ? <span style={{ marginRight: \"7px\", marginLeft: \"5px\" }}>weeks</span> : null}\r\n                                                    {timeAgo.days ? timeAgo.days : null}\r\n                                                    {timeAgo.days ? <span style={{ marginRight: \"7px\", marginLeft: \"5px\" }}>days</span> : null}\r\n                                                    {timeAgo.hours ? timeAgo.hours : null}\r\n                                                    {timeAgo.hours ? <span style={{ marginRight: \"7px\", marginLeft: \"5px\" }}>hours</span> : null}\r\n                                                    {timeAgo.minutes ? timeAgo.minutes : null}\r\n                                                    {timeAgo.minutes ? <span style={{ marginRight: \"7px\", marginLeft: \"5px\" }}>minutes</span> : null}\r\n                                                    {timeAgo.seconds ? timeAgo.seconds : null}\r\n                                                    {timeAgo.seconds ? <span style={{ marginRight: \"7px\", marginLeft: \"5px\" }}>seconds</span> : null}\r\n                                                    <span>ago</span>\r\n                                                </span>\r\n                                                <span className=\"detailBlog-commentContent\" style={{ fontSize: \"16px\" }}> {item.idUser ? item.content : null} </span>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    }) : null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <BackTop>\r\n                            <ArrowUpOutlined className=\"backTop\" />\r\n                        </BackTop>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n        </BaseLayout>\r\n    );\r\n}\r\n\r\nexport default DetailBlog;\r\n\r\n","C:\\Users\\84336\\Desktop\\blog-react\\src\\views\\Login\\LoginAdmin.jsx",["81","82"],"import React, {useState} from 'react';\r\nimport axios from \"../../config/axios/axios\"\r\nimport \"./LoginAdmin.css\";\r\nimport { useHistory} from \"react-router-dom\"\r\nfunction LoginAdmin(props) {\r\n    let history = useHistory()\r\n    let [email, setEmail] = useState(\"\")\r\n    let [password, setPassword] = useState(\"\")\r\n    return (\r\n        <div className=\"loginAdmin\">\r\n            <input type=\"text\" placeholder=\"Nhập Email\" onChange={(e)=>{\r\n                setEmail(e.target.value)\r\n            }}/>\r\n            <input type=\"text\" placeholder=\"Nhập password\" onChange={(e)=>{\r\n                setPassword(e.target.value)\r\n            }}/>\r\n            <button style={{fontSize: \"20px\"}} onClick={()=>{\r\n                axios({\r\n                    method: \"POST\",\r\n                    url: \"/user/login\",\r\n                    data: {\r\n                        email: email,\r\n                        password: password\r\n                    }\r\n                })\r\n                .then( async (res)=>{\r\n                    if(res.data.user.role = \"admin\"){\r\n                        let result = await localStorage.setItem(\"user\", JSON.stringify(res.data.user))\r\n                        history.push(\"/user\")\r\n                        \r\n                    }else{\r\n                        alert(\"Bạn khong phai la admin\")\r\n                    }\r\n                    \r\n                })\r\n                .catch((err)=>{\r\n                    alert(err.response.data.message)\r\n                })\r\n            }}>Đăng Nhập</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginAdmin;","C:\\Users\\84336\\Desktop\\blog-react\\src\\views\\Login\\Login.jsx",["83"],"import React, { useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Input, Checkbox, Button, Modal } from 'antd';\r\nimport Cookies from \"js-cookie\"\r\nimport {\r\n    MailOutlined,\r\n    LockOutlined\r\n} from '@ant-design/icons';\r\nimport \"./Login.css\"\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Login(props) {\r\n    let history = useHistory()\r\n    let [visibleModalSignUp, setVisibleModalSignUp] = useState(false)\r\n    let [loadModalSignUp, setLoadModalSignUp] = useState(false)\r\n    let [email, setEmail] = useState(\"\")\r\n    let [password, setPassword] = useState(\"\")\r\n    let [signUpUsename, setSignUpUsename] = useState(\"\")\r\n    let [signUpPassword, setSignUpPassword] = useState(\"\")\r\n    let [signUpEmail, setSignUpEmail] = useState(\"\")\r\n    const showModalSingUp = () => {\r\n        setVisibleModalSignUp(true)\r\n    }\r\n    const hideModalSingUp = () => {\r\n        setVisibleModalSignUp(false)\r\n    }\r\n    const handleOkSignUp = () => {\r\n        axios({\r\n            method: \"POST\",\r\n            url: \"/user/signup\",\r\n            data: {\r\n                username: signUpUsename,\r\n                password: signUpPassword,\r\n                email: signUpEmail\r\n            }\r\n        })\r\n            .then((res) => {\r\n                setLoadModalSignUp(true);\r\n                setTimeout(() => {\r\n                    setVisibleModalSignUp(false)\r\n                    setLoadModalSignUp(false);\r\n                }, 3000);\r\n                alert(res.data.message)\r\n            })\r\n            .catch((err) => {\r\n                alert(err.response.data.message)\r\n            })\r\n    };\r\n    const modalSignUp = (\r\n        <Modal\r\n            className=\"modalSignUp\"\r\n            visible={visibleModalSignUp}\r\n            title=\"Tạo tài khoản mới\"\r\n            onOk={handleOkSignUp}\r\n            onCancel={hideModalSingUp}\r\n            footer={[\r\n                <Button key=\"submit\" type=\"primary\" loading={loadModalSignUp} onClick={handleOkSignUp}>\r\n                    Submit\r\n            </Button>\r\n            ]}\r\n        >\r\n            <div>\r\n                <input type=\"text\" name=\"username\" id=\"\" placeholder=\"Nhập username\"\r\n                    onChange={(e) => {\r\n                        setSignUpUsename(e.target.value)\r\n                    }}\r\n                />\r\n                <input type=\"password\" name=\"password\" id=\"\" placeholder=\"Nhập password\"\r\n                    onChange={(e) => {\r\n                        setSignUpPassword(e.target.value)\r\n                    }}\r\n                />\r\n                <input type=\"text\" name=\"email\" id=\"\" placeholder=\"Nhập email\"\r\n                    onChange={(e) => {\r\n                        setSignUpEmail(e.target.value)\r\n                    }}\r\n                />\r\n            </div>\r\n        </Modal>\r\n    )\r\n    return (\r\n        <>\r\n            {modalSignUp}\r\n            <div className=\"page-login\">\r\n                <div className=\"text-introduce\">\r\n                    <h1 style={{ color: \"blue\", fontSize: \"40px\" }}>NODEJS</h1>\r\n                    <p style={{ fontSize: \"18px\" }}>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Aliquam at dicta error esse optio earum eaque voluptate officia, unde, quod velit repudiandae cum.</p>\r\n                </div>\r\n                <div>\r\n                    <Form className=\"form-login\" name=\"normal_login\">\r\n                        <h1>Email</h1>\r\n                        <Form.Item\r\n                            name=\"email\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your email!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            \r\n                                <Input prefix={<MailOutlined style={{ fontSize: \"25px\" }} />} placeholder=\"Nhập email\" onChange={(e) => {\r\n                                    setEmail(e.target.value)\r\n                                }} />\r\n                        </Form.Item>\r\n                        <h1>Password</h1>\r\n                        <Form.Item\r\n                            style={{ marginBottom: \"0px\" }}\r\n                            name=\"password\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your password!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                                <Input.Password prefix={<LockOutlined style={{ fontSize: \"25px\" }} />} placeholder=\"Nhập password\" type=\"password\" onChange={(e) => {\r\n                                    setPassword(e.target.value)\r\n                                }} />\r\n                            <p></p>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name=\"remember\" valuePropName=\"checked\" className=\"login-remember\">\r\n                            <Checkbox onChange={(e)=>{\r\n                                if(e.target.checked === true){\r\n                                    console.log(\"1\");\r\n                                }\r\n                            }}>Remember</Checkbox>\r\n                        </Form.Item>\r\n                        <Form.Item >\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-btn\" onClick={() => {\r\n                                axios({\r\n                                    method: \"POST\",\r\n                                    url: \"/user/login\",\r\n                                    data: {\r\n                                        email: email,\r\n                                        password: password\r\n                                    }\r\n                                })\r\n                                    .then((res) => {\r\n                                        if(res.data.user.avatar){\r\n                                            localStorage.setItem(\"user\", JSON.stringify(res.data.user))\r\n                                            Cookies.set('token', res.data.token, { expires: 7 });\r\n                                            history.push(\"/blog\")\r\n                                        }else{\r\n                                            axios({\r\n                                                method: \"PUT\",\r\n                                                url: `/user/avatar/${res.data.user._id}`,\r\n                                                data: {\r\n                                                    urlAvatar: res.data.user.username.slice(0,1).toUpperCase()\r\n                                                }\r\n                                            })\r\n                                            .then(async (respone)=>{\r\n                                                res.data.user.avatar= res.data.user.username.slice(0,1).toUpperCase()\r\n                                                localStorage.setItem(\"user\", JSON.stringify(res.data.user))\r\n                                                Cookies.set('token', res.data.token, { expires: 7 });\r\n                                                history.push(\"/blog\")\r\n                                             })\r\n                                            .catch((err)=>{ \r\n                                                console.log(err);\r\n                                            })\r\n                                        }\r\n                                        \r\n                                    })\r\n                                    .catch((err) => {\r\n                                        alert(err.response.data.message)\r\n                                    })\r\n                            }}>\r\n                                Đăng Nhập\r\n                            </Button>\r\n                        </Form.Item>\r\n                        <div className=\"login-forgot-password\"><a href=\"#\">Quên mật khẩu ?</a></div>\r\n                        <hr style={{ margin: \"15px 0\" }} />\r\n                        <Form.Item >\r\n                            <Button style={{ backgroundColor: \" rgb(62, 238, 62)\", border: \"none\" }}\r\n                                type=\"primary\" className=\"login-btn\"\r\n                                onClick={showModalSingUp}\r\n                            >\r\n                                Đăng Ký\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\84336\\Desktop\\blog-react\\src\\components\\BaseLayout\\BaseLayout.jsx",["84","85","86","87","88","89","90"],"import React, { useState } from 'react';\r\nimport { Layout, Menu, Drawer, Row, Col, Avatar } from 'antd';\r\nimport { MenuOutlined, LogoutOutlined, UploadOutlined, UserOutlined} from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport \"../BaseLayout/BaseLayout.css\"\r\nimport logoHeader from \"../../vendor/img/logo2Baselayout.png\"\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport Cookies from \"js-cookie\"\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nfunction BaseLayout(props) {\r\n  let history = useHistory()\r\n  let [visibleDrawer, setVisibleDrawer] = useState(false)\r\n  let user = JSON.parse(localStorage.getItem('user'));\r\n  let [showBaseLayoutSelect, setShowBaseLayoutSelect] = useState(\"\")\r\n\r\n  const showDrawer = () => {\r\n    setVisibleDrawer(true)\r\n  };\r\n  const onClose = () => {\r\n    setVisibleDrawer(false)\r\n  }\r\n  const showSelect = ()=> {\r\n    if(showBaseLayoutSelect){\r\n      setShowBaseLayoutSelect(\"\")\r\n    }else{\r\n      setShowBaseLayoutSelect({\r\n        display: \"block\"\r\n      })\r\n    }\r\n  }\r\n  const drawer = (\r\n    <Drawer\r\n      title=\"NODEJS\"\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={visibleDrawer}\r\n      className=\"baselayout-drawer\"\r\n    >\r\n      <p>Some contents...</p>\r\n      <p>Some contents...</p>\r\n      <p>Some contents...</p>\r\n      <p className=\"baselayout-drawerlogout\"><LogoutOutlined></LogoutOutlined> Đăng Xuất</p>\r\n    </Drawer>\r\n  )\r\n  const day = new Date().getDay();\r\n  let day_name = \"\"\r\n  function getDay(day) {\r\n    switch (day) {\r\n      case 0:\r\n        return  day_name = \"Chủ nhật\";\r\n          break;\r\n      case 1:\r\n        return  day_name = \"Thứ hai\";\r\n          break;\r\n      case 2:\r\n        return  day_name = \"Thứ ba\";\r\n          break;\r\n      case 3:\r\n        return  day_name = \"Thứ tư\";\r\n          break;\r\n      case 4:\r\n        return  day_name = \"Thứ năm\";\r\n          break;\r\n      case 5:\r\n        return  day_name = \"Thứ sau\";\r\n          break;\r\n      case 6:\r\n        return  day_name = \"Thứ bảy\";\r\n      }\r\n  }\r\n  getDay(day)\r\n\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <Header className=\"header\">\r\n        {drawer}\r\n        <span><img className=\"logo-header\" src={logoHeader} alt=\"\" /></span>\r\n        <span className=\"baselayout-time\"> {day_name } : {new Date(Date.now()).toLocaleDateString()}</span>\r\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']} className=\"baselayout-header\">\r\n          <Menu.Item key=\"1\">Mới nhất</Menu.Item>\r\n          <Menu.Item key=\"2\">International</Menu.Item>\r\n        </Menu>\r\n        <span onClick={showDrawer} className=\"baselayout-header-response\"><MenuOutlined /></span>\r\n        { user.avatar ? user.avatar.length === 1 ? <Avatar className=\"baselayout-header-select\" onClick={showSelect}>{user.avatar.toUpperCase()}</Avatar> : \r\n          <Avatar className=\"baselayout-header-select\" src={`${user.avatar}`} onClick={showSelect}></Avatar> : <Avatar className=\"baselayout-header-select\" icon={<UserOutlined></UserOutlined>} onClick={showSelect}></Avatar>\r\n        }\r\n        <div style={showBaseLayoutSelect ? showBaseLayoutSelect : {}} className=\"baselayout-select\">\r\n              <p onClick={()=>{\r\n                axios({\r\n                  method: \"POST\",\r\n                  url: \"/user/logout\"\r\n                })\r\n                .then((res)=>{\r\n                  Cookies.remove(\"token\")\r\n                  history.push(\"/login\")\r\n                })\r\n              }}><span><Avatar icon={<LogoutOutlined></LogoutOutlined>}></Avatar></span> <span>Đăng Xuất</span></p>\r\n              <p onClick={()=>{\r\n                history.push(\"/updateAvatar\")\r\n              }}><span><Avatar icon={<UploadOutlined></UploadOutlined>}></Avatar></span>Cập nhật Avatar</p>\r\n            </div>\r\n      </Header>\r\n      <Content className=\"site-layout-background ant-layout-content\">\r\n        <Row justify=\"center content\">\r\n          <Col xs={props.xs ? props.xs : 23} sm={props.sm ? props.sm : 23}    \r\n            style={{ padding: \"0 0\" }}>\r\n            <div className=\"site-layout-content\">\r\n              {\r\n                props.children\r\n              }\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default BaseLayout;","C:\\Users\\84336\\Desktop\\blog-react\\src\\config\\axios\\axios.jsx",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":47,"column":29,"nodeType":"97","endLine":47,"endColumn":32},{"ruleId":"98","severity":1,"message":"99","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"103","line":31,"column":8,"nodeType":"104","endLine":31,"endColumn":18,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":27,"column":24,"nodeType":"108","messageId":"109","endLine":27,"endColumn":52},{"ruleId":"98","severity":1,"message":"110","line":28,"column":29,"nodeType":"100","messageId":"101","endLine":28,"endColumn":35},{"ruleId":"95","severity":1,"message":"111","line":173,"column":64,"nodeType":"97","endLine":173,"endColumn":76},{"ruleId":"112","severity":1,"message":"113","line":51,"column":5,"nodeType":"114","messageId":"115","endLine":72,"endColumn":8},{"ruleId":"116","severity":1,"message":"117","line":54,"column":11,"nodeType":"118","messageId":"119","endLine":54,"endColumn":17},{"ruleId":"116","severity":1,"message":"117","line":57,"column":11,"nodeType":"118","messageId":"119","endLine":57,"endColumn":17},{"ruleId":"116","severity":1,"message":"117","line":60,"column":11,"nodeType":"118","messageId":"119","endLine":60,"endColumn":17},{"ruleId":"116","severity":1,"message":"117","line":63,"column":11,"nodeType":"118","messageId":"119","endLine":63,"endColumn":17},{"ruleId":"116","severity":1,"message":"117","line":66,"column":11,"nodeType":"118","messageId":"119","endLine":66,"endColumn":17},{"ruleId":"116","severity":1,"message":"117","line":69,"column":11,"nodeType":"118","messageId":"119","endLine":69,"endColumn":17},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'idBlog'. Either include it or remove the dependency array.","ArrayExpression",["122"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'result' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},"Update the dependencies array to be: [idBlog, overview]",{"range":"125","text":"126"},[1215,1225],"[idBlog, overview]"]