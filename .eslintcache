[{"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\index.js":"1","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\reportWebVitals.js":"2","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\App.js":"3","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\redux\\reducers\\index.jsx":"4","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\redux\\reducers\\IDBlog.jsx":"5","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\blog\\DetailBlog.jsx":"6","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\users\\UpdatePhone.jsx":"7","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\components\\notFound\\NotFound.jsx":"8","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\users\\Users.jsx":"9","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\updateBlog\\UpdateBlog.jsx":"10","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\users\\UpdateAvarta.jsx":"11","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\components\\Router\\index.jsx":"12","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\Login\\LoginAdmin.jsx":"13","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\Login\\Login.jsx":"14","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\config\\axios\\axios.jsx":"15","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\components\\BaseLayout\\BaseLayout1.jsx":"16","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\blog\\Blog.jsx":"17","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\blog\\BlogSelect.jsx":"18"},{"size":657,"mtime":1612025914636,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":1636,"mtime":1616819731199,"results":"22","hashOfConfig":"20"},{"size":185,"mtime":1614943779238,"results":"23","hashOfConfig":"20"},{"size":330,"mtime":1614960446530,"results":"24","hashOfConfig":"20"},{"size":12624,"mtime":1616813915022,"results":"25","hashOfConfig":"20"},{"size":2017,"mtime":1615108871714,"results":"26","hashOfConfig":"20"},{"size":170,"mtime":1610686698861,"results":"27","hashOfConfig":"20"},{"size":5553,"mtime":1616823928634,"results":"28","hashOfConfig":"20"},{"size":3348,"mtime":1615749880572,"results":"29","hashOfConfig":"20"},{"size":2143,"mtime":1616819959668,"results":"30","hashOfConfig":"20"},{"size":1219,"mtime":1615724168214,"results":"31","hashOfConfig":"20"},{"size":1569,"mtime":1616823467250,"results":"32","hashOfConfig":"20"},{"size":8763,"mtime":1615786902019,"results":"33","hashOfConfig":"20"},{"size":391,"mtime":1616823078674,"results":"34","hashOfConfig":"20"},{"size":4454,"mtime":1616823990519,"results":"35","hashOfConfig":"20"},{"size":9573,"mtime":1616823297065,"results":"36","hashOfConfig":"20"},{"size":10112,"mtime":1616823923431,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1ctpv72",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\index.js",[],["77","78"],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\reportWebVitals.js",[],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\App.js",[],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\redux\\reducers\\index.jsx",[],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\redux\\reducers\\IDBlog.jsx",[],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\blog\\DetailBlog.jsx",["79"],"import React, { useEffect, useState } from 'react';\r\nimport BaseLayout from \"../../components/BaseLayout/BaseLayout1\";\r\nimport axios from \"../../config/axios/axios\"\r\nimport \"../blog/DetailBlog.css\"\r\nimport { Col, Row, Image, Input, Affix, Avatar , Button} from 'antd';\r\nimport {\r\n    createFromIconfontCN, LeftCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction DetailBlog(props) {\r\n    let [dataBlog, setDataBlog] = useState(\"\")\r\n    let [contentComment, setContentComment] = useState(\"\")\r\n    let history = useHistory()\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n    let [comments, setComments] = useState(\"\")\r\n    let [overview, setOverview] = useState(false)\r\n    let [worldBlog, setWorldBlog] = useState(\"\")\r\n    const IconFont = createFromIconfontCN({\r\n        scriptUrl: '//at.alicdn.com/t/font_8d5l8fzk5b87iudi.js',\r\n    });\r\n    let idBlog = null\r\n    if(process.env.NODE_ENV === \"dev\"){\r\n        idBlog = window.location.href.split(`${process.env.REACT_APP_DEV}/detailBlog/`)[1];\r\n    }else{\r\n        idBlog = window.location.href.split(`${process.env.REACT_APP_URL}/detailBlog/`)[1];\r\n    }\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'GET',\r\n            url: `/detail-blog/${idBlog}`\r\n        }).then((data) => {\r\n            setDataBlog(data.data.data);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }, [overview])\r\n\r\n    function getTimeComment(timeCreateAt) {\r\n        let years = Math.floor((Date.now() - timeCreateAt) / (259200 * 3600000));\r\n        let months = Math.floor((Date.now() - timeCreateAt - years * (259200 * 3600000)) / (720 * 3600000));\r\n        let weeks = Math.floor((Date.now() - timeCreateAt - years * (259200 * 3600000) - months * (720 * 3600000)) / (168 * 3600000));\r\n        let days = Math.floor((Date.now() - timeCreateAt - years * (259200 * 3600000) - months * (720 * 3600000) - weeks * (168 * 3600000)) / (24 * 3600000));\r\n        let hours = Math.floor((Date.now() - timeCreateAt - years * (259200 * 3600000) - months * (720 * 3600000) - weeks * (168 * 3600000) - days * (24 * 3600000)) / (3600000));\r\n        let minutes = Math.floor((Date.now() - timeCreateAt - years * (259200 * 3600000) - months * (720 * 3600000) - weeks * (168 * 3600000) - days * (24 * 3600000) - hours * 3600000) / (60000));\r\n        let seconds = Math.floor((Date.now() - timeCreateAt - years * (259200 * 3600000) - months * (720 * 3600000) - weeks * (168 * 3600000) - days * (24 * 3600000) - hours * 3600000 - minutes * 60000) / (1000));\r\n        return { years, months, days, weeks, hours, minutes, seconds }\r\n    }\r\n    useEffect(() => {\r\n        if (dataBlog) {\r\n            axios({\r\n                method: \"GET\",\r\n                url: `/blog/getComment/${dataBlog._id}`\r\n            })\r\n                .then((res) => {\r\n                    setComments(res.data.data[0].idComment)\r\n                })\r\n                .catch((err) => {\r\n                    alert(err.response.data.message)\r\n                })\r\n        }\r\n    }, [dataBlog])\r\n    useEffect(() => {\r\n        axios({\r\n            method: \"GET\",\r\n            url: `/blog/world`\r\n        })\r\n            .then((res) => {\r\n                setWorldBlog(res.data.data)\r\n            })\r\n            .catch((err) => {\r\n                alert(err.response.data.message)\r\n            })\r\n    }, [])\r\n    function shuffle(array) {\r\n        var currentIndex = array.length;\r\n        while (0 !== currentIndex) {\r\n\r\n            // Pick a remaining element...\r\n            let randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n\r\n            // And swap it with the current element.\r\n            let temporaryValue = array[currentIndex];\r\n            array[currentIndex] = array[randomIndex];\r\n            array[randomIndex] = temporaryValue;\r\n        }\r\n\r\n        return array;\r\n    }\r\n    var WorldBlosShuffle = null;\r\n    if (worldBlog) {\r\n        WorldBlosShuffle = shuffle(worldBlog)\r\n    }\r\n    if (comments) {\r\n        comments = comments.filter((item) => {\r\n            return item.idUser\r\n        })\r\n    }\r\n\r\n    return (\r\n        <BaseLayout>\r\n          <Affix offsetTop={240} onChange={affixed => console.log(affixed)}>\r\n                    <div className=\"icon-fix\">\r\n                        <div>  <LeftCircleOutlined onClick={() => {\r\n                            history.push(\"/blog\")\r\n                        }} />  \r\n                        </div>\r\n                        <div> <IconFont type=\"icon-facebook\" /> </div>\r\n                        <div> <IconFont type=\"icon-twitter\" /> </div>\r\n                    </div>\r\n\r\n            </Affix >\r\n            <div className='container' style={{ paddingBottom: \"20px\" }}>\r\n              \r\n                <Row>\r\n                    <Col md={18} xs={24}>\r\n                        {<div>\r\n                            <div  style={{ padding: \"0 25px\", marginBottom: \"70px\" }}>\r\n                                <h1 style={{ paddingBottom: \"20px\", marginBottom: \"30px\", fontSize: \"25px\" }}> {dataBlog.title}  </h1>\r\n                                <div style={{ textAlign: \"center\", paddingBottom: \"20px\" }}>\r\n                                    <Image style={{ width: \"100%\" }}\r\n                                        src={dataBlog.imagedetail}\r\n                                    >\r\n                                    </Image>\r\n                                    <p style={{ textAlign: \"center\", marginTop: \"15px\" }}>{dataBlog.introduceImg}</p>\r\n\r\n                                </div>\r\n                                <p style={{fontSize: '18px', fontWeight: '400'}}> {dataBlog.content}   </p>\r\n                            </div>\r\n                        </div>\r\n                        }\r\n                        < hr style={{ height: \"3px\" }} />\r\n                        <div style={{ paddingBottom: \"30px\" }}>\r\n                            <div>\r\n                                <h3 style={{fontSize: '20px' ,fontWeight: 'bolder', color:'#f69631', }}> {comments.length} COMMENTS </h3>\r\n                                <div className=\"comment-detailblog\">\r\n                                    {user.avatar ? user.avatar.length === 1 ? <Avatar>{user.avatar.toUpperCase()}</Avatar> : <Avatar src={user.avatar}></Avatar> : null}\r\n                                    <Input onChange={(e)=>{setContentComment(e.target.value)}} placeholder=\"Y kien cua ban... \" type=\"text\"/>\r\n                                </div>\r\n                                <Button style={{marginBottom: '10px'}} type=\"primary\" onClick={() => {\r\n                                    contentComment ? axios({\r\n                                        method: \"POST\",\r\n                                        url: \"/comment\",\r\n                                        data: {\r\n                                            idBlog: dataBlog._id,\r\n                                            idUser: user._id,\r\n                                            content: contentComment,\r\n                                            createAt: Date.now() - 1000\r\n                                        }\r\n                                    })\r\n                                        .then((res) => {\r\n                                            setOverview(!overview)\r\n                                        })\r\n                                        .catch((err) => {\r\n                                            alert(err.response.data.message)\r\n                                        }) : setContentComment(\"\")\r\n                                }}> Gửi bình luận </Button>\r\n                                <div>\r\n\r\n                                    {comments.length ? comments.map((item, index) => {\r\n                                        let timeAgo = getTimeComment(item.createAt)\r\n                                        return <Row style={{ marginTop: \"10px\" }} key={index}>\r\n                                            <Col xs={3} sm={2}>\r\n                                                <div className=\"avatar\">\r\n                                                    {item.idUser ? item.idUser.avatar.length === 1 ? <Avatar style={{ color: \"rgb(230, 70, 78)\" }}>{item.idUser.avatar.toUpperCase()}</Avatar> : <Avatar src={`${item.idUser.avatar}`}></Avatar> : null}\r\n                                                </div>\r\n                                            </Col>\r\n                                            <Col xs={21} sm={22} style={{ paddingLeft: \"10px\" }}>\r\n                                                <span style={{ color: \"#9670d4\", fontWeight: \"600\", paddingRight: \"10px\", fontSize: \"18px\" }}> {item.idUser ? item.idUser.username : null} </span>\r\n                                                <span style={{ fontSize: \"14px\", color: \"#424447\" }}>{timeAgo.years ? timeAgo.years : null}\r\n                                                    {timeAgo.years ? <span style={{ marginRight: \"7px\", marginLeft: \"5px\" }}>years</span> : null}\r\n                                                    {timeAgo.months ? timeAgo.months : null}\r\n                                                    {timeAgo.months ? <span style={{ marginRight: \"7px\", marginLeft: \"5px\" }}>months</span> : null}\r\n                                                    {timeAgo.weeks ? timeAgo.weeks : null}\r\n                                                    {timeAgo.weeks ? <span style={{ marginRight: \"7px\", marginLeft: \"5px\" }}>weeks</span> : null}\r\n                                                    {timeAgo.days ? timeAgo.days : null}\r\n                                                    {timeAgo.days ? <span style={{ marginRight: \"7px\", marginLeft: \"5px\" }}>days</span> : null}\r\n                                                    {timeAgo.hours ? timeAgo.hours : null}\r\n                                                    {timeAgo.hours ? <span style={{ marginRight: \"7px\", marginLeft: \"5px\" }}>hours</span> : null}\r\n                                                    {timeAgo.minutes ? timeAgo.minutes : null}\r\n                                                    {timeAgo.minutes ? <span style={{ marginRight: \"7px\", marginLeft: \"5px\" }}>minutes</span> : null}\r\n                                                    {timeAgo.seconds ? timeAgo.seconds : null}\r\n                                                    {timeAgo.seconds ? <span style={{ marginRight: \"7px\", marginLeft: \"5px\" }}>seconds</span> : null}\r\n                                                    <span>ago</span>\r\n                                                </span>\r\n                                                <span className=\"detailBlog-commentContent\" style={{ fontSize: \"16px\" }}> {item.idUser ? item.content : null} </span>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    }) : null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={6} xs={24}>\r\n                        <img className='banner' style={{ width: '100%', paddingTop: '10px', marginBottom: '50px' }} src=\"https://news.mogi.vn/wp-content/uploads/2020/09/bannerbatdongsan041.jpg\" alt=\"\" />\r\n                        <h3 style={{ fontSize: '20px', fontWeight: 'bolder', color: '#f69631', }}> TIN THẾ GIỚI </h3>\r\n                        {worldBlog.length ? <div>\r\n                            <Image style={{ width: \"100%\" }} src={WorldBlosShuffle[0].image} />\r\n                            <div style={{ width: '100%', height: '350px', overflowY: 'scroll', paddingBottom: '8px' }}>\r\n                                {WorldBlosShuffle.map((item, index) => {\r\n                                    return <div key={index} className='text-title' style={{ paddingTop: '5px' }}>\r\n                                        <h3 onClick={() => {\r\n                                            setOverview(!overview)\r\n                                            history.push(`/detailBlog/${item._id}`)\r\n                                        }}>{item.title}</h3>\r\n                                        <p>{item.content.slice(0, 150)} </p>\r\n                                        <hr />\r\n                                    </div>\r\n\r\n                                })}\r\n                            </div>\r\n                        </div> : null}\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n        </BaseLayout>\r\n    );\r\n}\r\n\r\nexport default DetailBlog;\r\n\r\n","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\users\\UpdatePhone.jsx",[],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\components\\notFound\\NotFound.jsx",[],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\users\\Users.jsx",["80"],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\updateBlog\\UpdateBlog.jsx",[],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\users\\UpdateAvarta.jsx",[],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\components\\Router\\index.jsx",[],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\Login\\LoginAdmin.jsx",["81"],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\Login\\Login.jsx",["82"],"import React, { useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Input, Checkbox, Button, Modal } from 'antd';\r\nimport Cookies from \"js-cookie\"\r\nimport {\r\n    MailOutlined,\r\n    LockOutlined\r\n} from '@ant-design/icons';\r\nimport \"./Login.css\"\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport logoLogin from \"../../vendor/img/logologin.png\"\r\nfunction Login(props) {\r\n    let history = useHistory()\r\n    let [visibleModalSignUp, setVisibleModalSignUp] = useState(false)\r\n    let [loadModalSignUp, setLoadModalSignUp] = useState(false)\r\n    let [email, setEmail] = useState(\"\")\r\n    let [password, setPassword] = useState(\"\")\r\n    let [signUpUsename, setSignUpUsename] = useState(\"\")\r\n    let [signUpPassword, setSignUpPassword] = useState(\"\")\r\n    let [signUpEmail, setSignUpEmail] = useState(\"\")\r\n    const showModalSingUp = () => {\r\n        setVisibleModalSignUp(true)\r\n    }\r\n    const hideModalSingUp = () => {\r\n        setVisibleModalSignUp(false)\r\n    }\r\n    const handleOkSignUp = () => {\r\n        axios({\r\n            method: \"POST\",\r\n            url: \"/user/signup\",\r\n            data: {\r\n                username: signUpUsename,\r\n                password: signUpPassword,\r\n                email: signUpEmail\r\n            }\r\n        })\r\n            .then((res) => {\r\n                setLoadModalSignUp(true);\r\n                setTimeout(() => {\r\n                    setVisibleModalSignUp(false)\r\n                    setLoadModalSignUp(false);\r\n                }, 3000);\r\n                alert(res.data.message)\r\n            })\r\n            .catch((err) => {\r\n                alert(err.response.data.message)\r\n            })\r\n    };\r\n    const modalSignUp = (\r\n        <Modal\r\n            className=\"modalSignUp\"\r\n            visible={visibleModalSignUp}\r\n            title=\"Tạo tài khoản mới\"\r\n            onOk={handleOkSignUp}\r\n            onCancel={hideModalSingUp}\r\n            footer={[\r\n                <Button key=\"submit\" type=\"primary\" loading={loadModalSignUp} onClick={handleOkSignUp}>\r\n                    Submit\r\n            </Button>\r\n            ]}\r\n        >\r\n            <div>\r\n                <input type=\"text\" name=\"username\" id=\"\" placeholder=\"Nhập username\"\r\n                    onChange={(e) => {\r\n                        setSignUpUsename(e.target.value)\r\n                    }}\r\n                />\r\n                <input type=\"password\" name=\"password\" id=\"\" placeholder=\"Nhập password\"\r\n                    onChange={(e) => {\r\n                        setSignUpPassword(e.target.value)\r\n                    }}\r\n                />\r\n                <input type=\"text\" name=\"email\" id=\"\" placeholder=\"Nhập email\"\r\n                    onChange={(e) => {\r\n                        setSignUpEmail(e.target.value)\r\n                    }}\r\n                />\r\n            </div>\r\n        </Modal>\r\n    )\r\n    return (\r\n        <>\r\n            {modalSignUp}\r\n            <div className=\"page-login\">\r\n                <div className=\"text-introduce\">\r\n                    <img src={logoLogin} alt=\"\"/>\r\n                    <p style={{ fontSize: \"18px\" }}>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Aliquam at dicta error esse optio earum eaque voluptate officia, unde, quod velit repudiandae cum.</p>\r\n                </div>\r\n                <div>\r\n                    <Form className=\"form-login\" name=\"normal_login\">\r\n                        <h1>Email</h1>\r\n                        <Form.Item\r\n                            name=\"email\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your email!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            \r\n                                <Input prefix={<MailOutlined style={{ fontSize: \"25px\" ,paddingRight: '7px'}} />} style={{fontSize: '50px', }} placeholder=\"Nhập email\" onChange={(e) => {\r\n                                    setEmail(e.target.value)\r\n                                }} />\r\n                        </Form.Item>\r\n                        <h1>Password</h1>\r\n                        <Form.Item\r\n                            style={{ marginBottom: \"0px\" }}\r\n                            name=\"password\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your password!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                                <Input.Password prefix={<LockOutlined style={{ fontSize: \"25px\", paddingRight: '7px' }} />} placeholder=\"Nhập password\" type=\"password\" onChange={(e) => {\r\n                                    setPassword(e.target.value)\r\n                                }} />\r\n                            <p></p>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name=\"remember\" valuePropName=\"checked\" className=\"login-remember\">\r\n                            <Checkbox onChange={(e)=>{\r\n                                if(e.target.checked === true){\r\n                                    console.log(\"1\");\r\n                                }\r\n                            }}>Remember</Checkbox>\r\n                        </Form.Item>\r\n                        <Form.Item >\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-btn\" onClick={() => {\r\n                                axios({\r\n                                    method: \"POST\",\r\n                                    url: \"/user/login\",\r\n                                    data: {\r\n                                        email: email,\r\n                                        password: password\r\n                                    }\r\n                                })\r\n                                    .then((res) => {\r\n                                        if(res.data.user.avatar){\r\n                                            localStorage.setItem(\"user\", JSON.stringify(res.data.user))\r\n                                            Cookies.set('token', res.data.token, { expires: 7 });\r\n                                            history.push(\"/blog\")\r\n                                        }else{\r\n                                            axios({\r\n                                                method: \"PUT\",\r\n                                                url: `/user/avatar/${res.data.user._id}`,\r\n                                                data: {\r\n                                                    urlAvatar: res.data.user.username.slice(0,1).toUpperCase()\r\n                                                }\r\n                                            })\r\n                                            .then(async (respone)=>{\r\n                                                res.data.user.avatar= res.data.user.username.slice(0,1).toUpperCase()\r\n                                                localStorage.setItem(\"user\", JSON.stringify(res.data.user))\r\n                                                Cookies.set('token', res.data.token, { expires: 7 });\r\n                                                history.push(\"/blog\")\r\n                                             })\r\n                                            .catch((err)=>{ \r\n                                                console.log(err);\r\n                                            })\r\n                                        }\r\n                                        \r\n                                    })\r\n                                    .catch((err) => {\r\n                                        alert(err.response.data.message)\r\n                                    })\r\n                            }}>\r\n                                Đăng Nhập\r\n                            </Button>\r\n                        </Form.Item>\r\n                        <div className=\"login-forgot-password\"><a href=\"#\">Quên mật khẩu ?</a></div>\r\n                        <hr style={{ margin: \"15px 0\" }} />\r\n                        <Form.Item >\r\n                            <Button style={{ backgroundColor: \" rgb(62, 238, 62)\", border: \"none\" }}\r\n                                type=\"primary\" className=\"login-btn\"\r\n                                onClick={showModalSingUp}\r\n                            >\r\n                                Đăng Ký\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\config\\axios\\axios.jsx",[],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\components\\BaseLayout\\BaseLayout1.jsx",[],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\blog\\Blog.jsx",[],"C:\\Users\\ADMIN\\Desktop\\practice-react\\src\\views\\blog\\BlogSelect.jsx",["83"],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":39,"column":8,"nodeType":"90","endLine":39,"endColumn":18,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":47,"column":29,"nodeType":"94","endLine":47,"endColumn":32},{"ruleId":"95","severity":1,"message":"96","line":27,"column":24,"nodeType":"97","messageId":"98","endLine":27,"endColumn":52},{"ruleId":"92","severity":1,"message":"99","line":173,"column":64,"nodeType":"94","endLine":173,"endColumn":76},{"ruleId":"88","severity":1,"message":"100","line":30,"column":8,"nodeType":"90","endLine":30,"endColumn":18,"suggestions":"101"},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'idBlog'. Either include it or remove the dependency array.","ArrayExpression",["104"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'category'. Either include it or remove the dependency array.",["105"],"no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [idBlog, overview]",{"range":"110","text":"111"},"Update the dependencies array to be: [category, overView]",{"range":"112","text":"113"},[1435,1445],"[idBlog, overview]",[1075,1085],"[category, overView]"]